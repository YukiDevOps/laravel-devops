# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- feature/devops
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'e10e2e73-1c45-4925-9b27-5348ab677299'
  imageFpmRepository: 'laravel-app'
  imageNginxRepository: 'laravel-nginx'
  containerRegistry: 'crcontainerdev.azurecr.io'
  dockerfileFpmPath: '$(Build.SourcesDirectory)/docker/fpm/Dockerfile'
  dockerfileNginxPath: '$(Build.SourcesDirectory)/docker/nginx/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Test
  displayName: Test and Publish Coverage
  jobs:
  - job: PublishCoverage
    displayName: 'Publish Coverage'
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: |
        docker build -f Docker/fpm/Dockerfile -t $(dockerId)/laravel-fpm:$BUILD_BUILDID .
        docker run ---name laravel-fpm --rm -d $(dockerId)/laravel-fpm:$BUILD_BUILDID
        docker cp . $(system.DefaultWorkingDirectory)
        docker exec -it laravel-fpm php artisan test
        docker stop laravel-fpm
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: $(System.DefaultWorkingDirectory)/covertura-coverage.xml
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageFpmRepository)
        dockerfile: $(dockerfileFpmPath)
        buildContext: $(Build.Repository.localPath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageNginxRepository)
        dockerfile: $(dockerfileNginxPath)
        buildContext: $(Build.Repository.localPath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
